#!/usr/bin/env python3

import argparse
import os
import sys

# This is necessary for the imports below to work.
root_dir = os.path.abspath(os.path.dirname(__file__) + '/..')
sys.path.append(root_dir)
from watchcat.watchcat import TickController

def parseArgs():
    parser = argparse.ArgumentParser(description='WatchCat',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('--width', dest='width', action='store', default=320, type=int,
        help='If both width and height are set, we will set the dimensions of the captured camera image to ' +
            'these dimensions. The units are pixels. Using smaller dimensions will speed up face detection.' +
            'If width and height both have a value of 0, the camera\'s default dimensions will be used.')
    parser.add_argument('--height', dest='height', action='store', default=240, type=int,
        help='If both width and height are set, we will set the dimensions of the captured camera image to ' +
            'these dimensions. The units are pixels. Using smaller dimensions will speed up face detection.' +
            'If width and height both have a value of 0, the camera\'s default dimensions will be used.')
    parser.add_argument('--show-preview', dest='show_preview', action='store_true', default=False,
        help='Send a live feed of the captured images via SSH X11 forwarding. ' +
        'See: https://github.com/dasl-/watchcat/blob/main/docs/viewing_live_camera_images_over_ssh.adoc')

    args = parser.parse_args()
    return args


args = parseArgs()

width = None
height = None
if args.width > 0:
    width = args.width
if args.height > 0:
    height = args.height

TickController().run()
